@model ConcessionViewModel

@{
    ViewData["Title"] = "Concession - Book Ticket";
}

@section Styles {
    <link rel="stylesheet" href="~/css/customer/booking/concession.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/customer/booking/booking-timer.css" asp-append-version="true" />
}

@Html.AntiForgeryToken()

<!-- Step Indicator -->
<div class="step-indicator">
    <div class="container">
        <div class="row">
            <div class="col-4">
                <div class="step-item completed" data-step="1">
                    <div class="step-icon">
                        <i class="fas fa-th"></i>
                    </div>
                    <span>Chọn ghế</span>
                </div>
            </div>
            <div class="col-4">
                <div class="step-item active" data-step="2">
                    <div class="step-icon">
                        <i class="fas fa-shopping-bag"></i>
                    </div>
                    <span>Bắp nước</span>
                </div>
            </div>
            <div class="col-4">
                <div class="step-item" data-step="3">
                    <div class="step-icon">
                        <i class="fas fa-credit-card"></i>
                    </div>
                    <span>Thanh toán</span>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Main Content -->
<div class="container booking-content has-sidebar-actions">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-lg-4 order-lg-2">
            <div class="sidebar-sticky">
                <!-- Movie Info -->
                <div class="movie-info-card fade-in">
                    @if (ViewBag.BookingExpiry != null)
                    {
                        <partial name="_BookingTimer" model="ViewBag.BookingExpiry" />
                    }
                    <div class="movie-title">@Model.MovieTitle</div>
                    <div class="cinema-name">@Model.CinemaName</div>
                    <div class="showtime">
                        <i class="fas fa-clock"></i> Suất <strong>@Model.ShowTime</strong><br>
                        <i class="fas fa-map-marker-alt"></i> Phòng chiếu <strong>@Model.ScreenName</strong> - Ghế <span
                            id="selected-seats">@string.Join(", ", Model.SeatName)</span>
                    </div>
                </div>

                <!-- Total -->
                <div class="total-card fade-in">
                    <div class="total-section-label">TỔNG ĐƠN HÀNG</div>
                    <div class="total-amount">
                        <span id="total-amount">@Model.TotalAmount.ToString("N0")</span> ₫
                    </div>
                </div>

                <!-- Action Buttons inside sidebar -->
                <div class="sidebar-action-buttons action-buttons fade-in">
                    <div class="row g-3">
                        <div class="col-4">
                            <a asp-action="Index" asp-controller="Booking" asp-route-showTimeId="@Model.ShowTimeId"
                                class="btn btn-custom btn-back w-100">
                                <i class="fas fa-arrow-left"></i>
                            </a>
                        </div>
                        <div class="col-8">
                            <a href="@Url.Action("Payment", "Booking")" class="btn btn-custom btn-continue w-100"
                                id="continue-btn">
                                <span>Tiếp tục</span>
                                <i class="fas fa-arrow-right"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="col-lg-8 order-lg-1">
            <div class="concession-section fade-in">
                <h3 class="section-title mb-4">
                    <i class="fas fa-shopping-bag me-2"></i>
                    Combo bắp nước
                </h3>

                <div class="combo-list">

                    @foreach (var combo in Model.Concessions)
                    {
                        <div class="combo-item">
                            <div class="combo-info">
                                <h5 class="combo-name">@combo.Name</h5>
                                <p class="combo-description">
                                    @Html.Raw(combo.Description)
                                </p>
                            </div>
                            <div class="combo-controls">
                                <div class="combo-price">@combo.Price.ToString("N0")đ</div>
                                <div class="quantity-controls">
                                    <button class="qty-btn minus" onclick="updateComboQuantity('@combo.Id', -1)">-</button>
                                    <span class="quantity" id="@combo.Id-qty">0</span>
                                    <button class="qty-btn plus" onclick="updateComboQuantity('@combo.Id', 1)">+</button>
                                </div>
                            </div>
                        </div>

                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Mobile action buttons (visible only on mobile) -->
<div class="action-buttons fade-in d-lg-none">
    <div class="row g-3">
        <div class="col-4">
            <a asp-action="Index" asp-controller="Booking" asp-route-showTimeId="@Model.ShowTimeId"
                class="btn btn-custom btn-back w-100">
                <i class="fas fa-arrow-left"></i>
            </a>
        </div>
        <div class="col-8">
            <a href="javascript:void(0)" class="btn btn-custom btn-continue w-100" id="mobile-continue-btn">
                <span>
                    <span id="mobile-total">@Model.TotalAmount.ToString("N0")</span>₫ |
                </span>
                <span>Tiếp tục</span>
                <i class="fas fa-arrow-right"></i>
            </a>
        </div>
    </div>
</div>

<span id="seat-base-amount" data-amount="@Model.TotalAmount" style="display:none"></span>
<span id="booking-id" data-id="@Model.BookingId" style="display:none"></span>

@section Scripts {
    <script src="~/js/customer/booking/concession-payment.js" asp-append-version="true"></script>
    <script src="~/js/customer/booking/booking-timer.js" asp-append-version="true"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Add class to body for CSS targeting
            document.body.classList.add('has-sidebar-actions');

            // Handle continue button click for both desktop and mobile
            const continueAction = function (e) {
                e.preventDefault();

                // Hiển thị loading spinner
                Swal.fire({
                    title: 'Đang xử lý...',
                    text: 'Vui lòng đợi trong giây lát',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                // Lấy bookingId từ hidden span
                const bookingId = document.getElementById('booking-id').dataset.id;

                // Chuẩn bị dữ liệu ConcessionOrderCreateDTO
                const concessionOrderDetails = [];

                // Lặp qua tất cả các combo đã chọn (có số lượng > 0)
                for (const [comboId, comboData] of Object.entries(combos)) {
                    if (comboData.quantity > 0) {
                        concessionOrderDetails.push({
                            concessionId: parseInt(comboId),
                            quantity: comboData.quantity,
                            unitPrice: comboData.price
                        });
                    }
                }

                // Nếu không có combo nào được chọn, chuyển thẳng đến trang thanh toán
                if (concessionOrderDetails.length === 0) {
                    window.location.href = '@Url.Action("Payment", "Booking")';
                    return;
                }

                const concessionOrderData = {
                    bookingId: parseInt(bookingId),
                    concessionOrderDetails: concessionOrderDetails
                };

                // Gọi API để tạo concession order trong database
                fetch('@Url.Action("CreateConcessionOrder", "Booking")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    },
                    body: JSON.stringify(concessionOrderData)
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.href = data.redirect || '@Url.Action("Payment", "Booking")';
                        } else {
                            // Hiển thị lỗi nếu có
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi',
                                text: data.message || 'Đã xảy ra lỗi khi đặt bắp nước. Vui lòng thử lại.'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: 'Đã xảy ra lỗi khi đặt bắp nước. Vui lòng thử lại.'
                        });
                    });
            };

            // Apply click handler to both buttons
            document.getElementById('continue-btn').addEventListener('click', continueAction);
            document.getElementById('mobile-continue-btn').addEventListener('click', continueAction);
        });

        function updateUI() {
            // Calculate total including combos
            if (typeof calculateTotalAmount === 'function') {
                const total = calculateTotalAmount();
                
                // Format the total amount
                const formattedTotal = total.toLocaleString('vi-VN');
                
                // Update total amount display
                document.querySelectorAll('#total-amount').forEach(el => {
                    if (el) el.textContent = formattedTotal;
                });
                
                // Update mobile total if it exists
                const mobileTotalEl = document.getElementById('mobile-total');
                if (mobileTotalEl) {
                    mobileTotalEl.textContent = formattedTotal;
                }
                
                console.log("Updated UI with total:", total);
            }
        }
    </script>
}
