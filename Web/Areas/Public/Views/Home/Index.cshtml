@{
    ViewData["Title"] = "Trang chủ";
}

@section Styles {
    <link rel="stylesheet" href="~/css/public/home.css" asp-append-version="true" />
}

<section class="promo-section">
    <!-- Movie Carousel -->
    <div class="movie-carousel">
        <h3 class="movie-section-heading">Phim mới đang chiếu</h3>
        <div class="carousel-container" id="movieCarousel">
            @* Hiển thị loading state ban đầu *@
            <div class="loading-state" id="loadingState">
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p>Đang tải phim...</p>
                </div>
            </div>

            @* Dữ liệu phim sẽ được load từ Controller hoặc AJAX *@
            @if (ViewBag.Movies != null && ((List<Web.Models.DTOs.Response.MovieDTO>)ViewBag.Movies).Any())
            {
                @foreach (var movie in (List<Web.Models.DTOs.Response.MovieDTO>)ViewBag.Movies)
                {
                    <div class="movie-card" onclick="viewMovieDetail(@movie.Id)">
                        <div class="movie-poster">
                            @if (!string.IsNullOrEmpty(movie.PosterUrl))
                            {
                                <img src="@movie.PosterUrl" alt="@movie.Title"
                                     onerror="this.style.display='none'; this.nextElementSibling.style.display='block';" />
                                <div class="poster-fallback" style="display:none;">
                                    <i class="fas fa-film"></i>
                                    <span>@movie.Title</span>
                                </div>
                            }
                            else
                            {
                                <div class="poster-fallback">
                                    <i class="fas fa-film"></i>
                                    <span>@movie.Title</span>
                                </div>
                            }
                        </div>
                        <div class="movie-info">
                            <div class="movie-title">@movie.Title</div>
                            <div class="movie-genre">
                                @if (movie.Genres != null && movie.Genres.Any())
                                {
                                    @string.Join(" • ", movie.Genres.Select(g => g.Name))
                                }
                                else
                                {
                                    <span class="text-muted">Chưa phân loại</span>
                                }
                            </div>
                            
                            <div class="movie-duration">
                                <i class="fas fa-clock"></i> @movie.Duration phút
                            </div>
                            <button class="book-btn" onclick="bookMovie(@movie.Id, event)">Đặt vé</button>
                        </div>
                    </div>
                }

                <script>
                    // Hide loading state sau khi load xong
                    document.getElementById('loadingState').style.display = 'none';
                </script>
            }
            else
            {
                <!-- Fallback content nếu không có data từ API -->
                <div class="no-movies-message" id="noMoviesMessage" style="display:none;">
                    <div class="text-center p-4">
                        <i class="fas fa-film fa-3x text-muted mb-3"></i>
                        <h4>Không có phim đang chiếu</h4>
                        <p class="text-muted">Hãy quay lại sau để xem những bộ phim mới nhất!</p>
                    </div>
                </div>
            }
        </div>

        <!-- Carousel Navigation Dots -->
        <div class="carousel-dots" id="carouselDots">
            <!-- Dots sẽ được tạo động bởi JavaScript -->
        </div>
    </div>
</section>

<!-- Footer Promotions -->
<section class="footer-promos">
    <div class="promo-card">
        <h3>ƯU ĐÃI ĐỘC QUYỀN</h3>
        <div class="price">₫50,000</div>
        <p>Giá đặc biệt cuối tuần</p>
        <small>Áp dụng từ thứ 6 đến chủ nhật</small>
    </div>
    <div class="promo-card">
        <h3>TÍCH ĐIỂM THÀNH VIÊN</h3>
        <p>Mỗi vé xem = 10 điểm</p>
        <p>Đổi quà hấp dẫn</p>
        <button class="btn btn-secondary mt-10">Đăng ký ngay</button>
    </div>
    <div class="promo-card">
        <h3>PHIM MỚI 2025</h3>
        <p>Những blockbuster đáng chờ đợi</p>
        <p>Đặt vé sớm - Ưu đãi lớn</p>
        <button class="btn btn-secondary mt-10">Xem thêm</button>
    </div>
</section>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Kiểm tra nếu không có movies từ server, load qua AJAX
            const hasMoviesFromServer = @Json.Serialize(ViewBag.Movies != null && ((List<Web.Models.DTOs.Response.MovieDTO>)ViewBag.Movies).Any());

            if (!hasMoviesFromServer) {
                loadFeaturedMovies();
            } else {
                // Nếu đã có data từ server, init carousel luôn
                initializeCarousel();
                updateStarRatings();
            }
        });

        function loadFeaturedMovies() {
            // Show loading state
            $('#loadingState').show();
            $('#noMoviesMessage').hide();

            // AJAX call to load featured movies
            $.get('@Url.Action("GetFeaturedMovies", "Home")', function (data) {
                $('#loadingState').hide();

                if (data && data.length > 0) {
                    updateMovieCarousel(data);
                    initializeCarousel();
                } else {
                    $('#noMoviesMessage').show();
                }
            }).fail(function (xhr, status, error) {
                console.error('Failed to load featured movies:', error);
                $('#loadingState').hide();
                $('#noMoviesMessage').show();
            });
        }

        function updateMovieCarousel(movies) {
            const carousel = $('#movieCarousel');

            // Clear existing content except loading/error messages
            carousel.find('.movie-card').remove();

            movies.forEach(movie => {
                const movieCard = createMovieCard(movie);
                carousel.append(movieCard);
            });

            updateStarRatings();
            updateCarouselDots(movies.length);
        }

        function createMovieCard(movie) {
            const genresText = movie.genres && movie.genres.length > 0
                ? movie.genres.map(g => g.name).join(' • ')
                : 'Chưa phân loại';

            const posterHtml = movie.posterUrl
                ? `<img src="${movie.posterUrl}" alt="${movie.title}"
                               onerror="this.style.display='none'; this.nextElementSibling.style.display='block';" />
                           <div class="poster-fallback" style="display:none;">
                               <i class="fas fa-film"></i>
                               <span>${movie.title}</span>
                           </div>`
                : `<div class="poster-fallback">
                               <i class="fas fa-film"></i>
                               <span>${movie.title}</span>
                           </div>`;

            return $(`
                        <div class="movie-card" onclick="viewMovieDetail(${movie.id})">
                            <div class="movie-poster">
                                ${posterHtml}
                            </div>
                            <div class="movie-info">
                                <div class="movie-title">${movie.title}</div>
                                <div class="movie-genre">${genresText}</div>
                                <div class="movie-rating">
                                    <span class="rating-stars" data-rating="${movie.rating}">★★★★☆</span>
                                    <span>${movie.rating}/10</span>
                                </div>
                                <div class="movie-duration">
                                    <i class="fas fa-clock"></i> ${movie.duration} phút
                                </div>
                                <button class="book-btn" onclick="bookMovie(${movie.id}, event)">Đặt vé</button>
                            </div>
                        </div>
                    `);
        }

        function updateStarRatings() {
            $('.rating-stars').each(function () {
                const rating = parseFloat($(this).data('rating')) || 0;
                const stars = generateStars(rating);
                $(this).html(stars);
            });
        }

        function generateStars(rating) {
            const fullStars = Math.floor(rating / 2);
            const halfStar = (rating % 2) >= 1;
            const emptyStars = 5 - fullStars - (halfStar ? 1 : 0);

            return '★'.repeat(fullStars) +
                (halfStar ? '☆' : '') +
                '☆'.repeat(emptyStars);
        }

        function updateCarouselDots(movieCount) {
            const dotsContainer = $('#carouselDots');
            dotsContainer.empty();

            const maxDots = Math.min(movieCount, 12);
            for (let i = 1; i <= maxDots; i++) {
                const dot = $(`<span class="dot${i === 1 ? ' active' : ''}" onclick="currentSlide(${i})"></span>`);
                dotsContainer.append(dot);
            }
        }

        function initializeCarousel() {
            const dots = $('.dot');
            if (dots.length === 0) {
                // Tạo dots nếu chưa có
                const movieCards = $('.movie-card').length;
                updateCarouselDots(movieCards);
            }

            // Auto slide carousel
            setInterval(() => {
                const activeDot = $('.dot.active');
                const nextIndex = activeDot.index() + 1;
                const totalDots = $('.dot').length;

                if (nextIndex >= totalDots) {
                    currentSlide(1);
                } else {
                    currentSlide(nextIndex + 1);
                }
            }, 5000);
        }

        function currentSlide(n) {
            const dots = $('.dot');
            const carousel = $('#movieCarousel');

            dots.removeClass('active');
            if (dots[n - 1]) {
                $(dots[n - 1]).addClass('active');
            }

            const cardWidth = 270;
            carousel.scrollLeft((n - 1) * cardWidth);
        }

        function viewMovieDetail(movieId) {
            window.location.href = '/Public/Movie/Details/' + movieId;
        }

        function bookMovie(movieId, event) {
            event.stopPropagation();

        @if (User.Identity.IsAuthenticated)
        {
            <text>
                    window.location.href = '@Url.Action("Book", "Booking", new { area = "Public" })/' + movieId;
            </text>
        }
        else
        {
            <text>
                                if (confirm('Bạn cần đăng nhập để đặt vé. Chuyển đến trang đăng nhập?')) {
                    window.location.href = '@Url.Action("Login", "Account", new { area = "Public" })';
                }
            </text>
        }
                }
    </script>
}